input {
    s3 {
        bucket => "aegislenz-s3"
        region => "us-east-1"    
        access_key_id => "${AWS_ACCESS_KEY_ID}"   
        secret_access_key => "${AWS_SECRET_ACCESS_KEY}"
        prefix => "AWSLogs/713881791527/CloudTrail/us-east-1/"
        codec => cloudtrail { }  
        delete => false          
        interval => 10          
        sincedb_path => "/usr/share/logstash/sincedb/sincedb_file"
    }
}

filter {
    ruby {
        code => '
            def flatten_hash(hash, prefix = "")
                hash.each_with_object({}) do |(key, value), result|
                    if value.is_a?(Hash)
                        result.merge!(flatten_hash(value, "#{prefix}#{key}."))
                    elsif value.is_a?(Array)
                        value.each_with_index do |item, index|
                            if item.is_a?(Hash)
                                result.merge!(flatten_hash(item, "#{prefix}#{key}[#{index}]."))
                            else
                                result["#{prefix}#{key}[#{index}]"] = item
                            end
                        end
                    else
                        result["#{prefix}#{key}"] = value
                    end
                end
            end

            record = event.get("[Records]")
            if record
                flattened = flatten_hash(record)
                flattened.each { |key, value| event.set(key, value) }
            end
        '
    }

    mutate {
        add_field => {
            "log_summary" => "%{[eventName]} from %{[sourceIPAddress]} by %{[userIdentity.userName]} using %{[userAgent]}"
        }
        remove_field => [
            "host",
            "agent",
            "@metadata"
        ]
    }
}

output {
    elasticsearch {
        hosts => ["${ELASTIC_HOST}"]
        index => "cloudtrail-logs-%{+YYYY.MM.dd}"
        ssl_verification_mode => "none"
        ecs_compatibility => "v8"
        document_id => "%{[eventID]}"
    }

    stdout {
        codec => rubydebug
    }
}
