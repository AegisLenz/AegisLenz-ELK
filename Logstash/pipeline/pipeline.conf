filter {
    if [message] {
        # JSON 파싱 시도
        json {
            source => "message"
            target => "parsed_message"
            skip_on_invalid_json => true
        }

        # JSON 파싱 실패한 경우만 태그 추가
        if "_jsonparsefailure" in [tags] {
            mutate {
                add_tag => ["json_parse_failed"]
            }
        }

        if [parsed_message] and [parsed_message][Records] {
            # Records 배열이 1개 이하라면 split을 건너뜁니다.
            if [parsed_message][Records][1] {
                split {
                    field => "[parsed_message][Records]"
                }
            }

            # 필요한 필드만 최상위로 이동
            mutate {
                rename => {
                    "[parsed_message][Records][sourceIPAddress]" => "source_ip"
                    "[parsed_message][Records][userAgent]" => "user_agent"
                    "[parsed_message][Records][eventName]" => "event_name"
                    "[parsed_message][Records][eventType]" => "event_type"
                    "[parsed_message][Records][eventSource]" => "event_source"
                    "[parsed_message][Records][awsRegion]" => "aws_region"
                    "[parsed_message][Records][errorCode]" => "error_code"
                    "[parsed_message][Records][errorMessage]" => "error_message"
                    "[parsed_message][Records][managementEvent]" => "management_event"
                    "[parsed_message][Records][vpcEndpointId]" => "vpc_endpoint_id"
                    "[parsed_message][Records][eventTime]" => "event_time"
                    "[parsed_message][Records][userIdentity][type]" => "user_identity_type"
                    "[parsed_message][Records][userIdentity][principalId]" => "user_identity_principal_id"
                    "[parsed_message][Records][userIdentity][arn]" => "user_identity_arn"
                    "[parsed_message][Records][userIdentity][accountId]" => "user_identity_account_id"
                }
            }

            # @timestamp 필드 설정
            date {
                match => ["event_time", "ISO8601"]
                target => "@timestamp"
            }

            # 중간에 생성된 불필요한 중첩 필드 제거
            mutate {
                remove_field => ["parsed_message", "host", "agent", "message"]
            }
        } else {
            drop { }
        }
    } else {
        drop { }
    }
}

output {
    elasticsearch {
        hosts => ["${ELASTIC_HOST}"]
        index => "cloudtrail-logs-%{+YYYY.MM.dd}"
        ssl_verification_mode => "none"
        ecs_compatibility => "v8"
    }
}
