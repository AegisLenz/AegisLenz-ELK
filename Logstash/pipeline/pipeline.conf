input {
    beats {
        port => 5045
        codec => json {
            charset => "UTF-8"
            target => "parsed_message"
        }
    }
}

filter {
    if [parsed_message] and [parsed_message][Records] {
        split { field => "[parsed_message][Records]" }

        mutate {
            rename => { "[parsed_message][Records]" => "record" }
        }

        if [record][eventName] not in [
            "ConsoleLogin", 
            "AssumeRole", 
            "AttachRolePolicy", 
            "DetachRolePolicy", 
            "PutUserPolicy", 
            "GetObject", 
            "PutObject", 
            "CreateAccessKey", 
            "PutBucketAcl", 
            "DeleteBucketPolicy"
        ] {
            drop { }
        }

        mutate {
            add_field => {
                "log_summary" => "%{[record][eventName]} from %{[record][sourceIPAddress]} by %{[record][userAgent]}"
            }
        }

        mutate {
            add_field => {
                "[record][eventID]" => "%{[record][eventID]}"
                "[record][eventName]" => "%{[record][eventName]}"
                "[record][eventTime]" => "%{[record][eventTime]}"
                "[record][eventSource]" => "%{[record][eventSource]}"
                "[record][awsRegion]" => "%{[record][awsRegion]}"
                "[record][sourceIPAddress]" => "%{[record][sourceIPAddress]}"
                "[record][userIdentity]" => "%{[record][userIdentity][type]}"
            }

            remove_field => [
                "parsed_message", 
                "host", 
                "agent", 
                "event.original", 
                "[record][responseElements]", 
                "[record][additionalEventData]"
            ]
        }
    } else {
        drop { }
    }
}

output {
    elasticsearch {
        hosts => ["${ELASTIC_HOST}"]
        index => "cloudtrail-logs-%{+YYYY.MM.dd}"
        ssl_verification_mode => "none"
        ecs_compatibility => "v8"
        document_id => "%{[record][eventID]}"
        template_overwrite => true
    }

    if "malicious_ip" in [tags] {
        elasticsearch {
            hosts => ["${ELASTIC_HOST}"]
            index => "cloudtrail-alerts-%{+YYYY.MM.dd}"
            ssl_verification_mode => "none"
            ecs_compatibility => "v8"
        }
    }

    if [record][eventName] in ["CreateUser", "DeleteUser"] {
        elasticsearch {
            hosts => ["${ELASTIC_HOST}"]
            index => "critical-events-%{+YYYY.MM.dd}"
        }
    }

    stdout {
        codec => line { format => "%{log_summary}" }
    }
}