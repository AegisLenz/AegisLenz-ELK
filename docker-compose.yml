version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - network.host=0.0.0.0
      - ES_JAVA_OPTS=-Xms9.5g -Xmx9.5g 
    networks:
      - elastic
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 19g

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.2
    container_name: logstash
    ports:
      - "5045:5044"
    volumes:
      - ./Logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./Logstash/config/pipeline.yml:/usr/share/logstash/config/pipeline.yml
      - ./Logstash/pipeline/pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf
      - logstash-data:/usr/share/logstash/data
    environment:
      - LS_JAVA_OPTS=-Xms4.5g -Xmx4.5g
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - ELASTIC_HOST=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic
    restart: always
    deploy:
      resources:
        limits:
          memory: 9g

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic
    volumes:
      - kibana-data:/usr/share/kibana/data
    restart: always

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.10.2
    container_name: filebeat
    volumes:
      - ./Filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - filebeat-data:/usr/share/filebeat/data
    networks:
      - elastic
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    depends_on:
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_started
    restart: always

networks:
  elastic:
    driver: bridge

volumes:
  es-data:
    driver: local 
  logstash-data:
    driver: local 
  kibana-data:
    driver: local  
  filebeat-data:
    driver: local
